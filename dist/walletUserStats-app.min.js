function calculateTimeInterval(){const t=new Date,e=new Date(t);e.setHours(0,0,0,0);const o=new Date(e);return o.setHours(24,0,0,0),{from:e.toISOString(),to:o.toISOString()}}async function showBetProgress(){const t=calculateTimeInterval(),e=extractAuthDataFromCookie();if(!e)return void alert("Authorization data is missing.");try{const o=await fetchGraphQL("\n        query GameSessionStats($userId: ID!, $createdAtFrom: DateTime, $createdAtTo: DateTime) {\n            gameSessionStats(userId: $userId, createdAtFrom: $createdAtFrom, createdAtTo: $createdAtTo) {\n                totalBet\n            }\n        }\n    ",{userId:e.userId,createdAtFrom:t.from,createdAtTo:t.to});displayProgressBars(o.data?.gameSessionStats?.[0]?.totalBet||0)}catch(t){alert("Failed to fetch progress data.")}}function displayProgressBars(t){const e=document.getElementById("progressBarContainer"),o=document.getElementById("progressStage1"),r=document.getElementById("progressStage2"),a=document.getElementById("progressStage3"),n=document.getElementById("progressInfo");if(!(e&&o&&r&&a&&n))return;e.style.display="flex",n.style.display="block",n.textContent=`${t}â‚¾`;const s=Math.min(t/6e3*100,100),d=t>6e3?Math.min((t-6e3)/9e3*100,100):0,i=t>15e3?Math.min((t-15e3)/15e3*100,100):0;o.style.width=`${s}%`,o.textContent=`${s.toFixed(2)}%`,r.style.width=`${d}%`,r.textContent=`${d.toFixed(2)}%`,a.style.width=`${i}%`,a.textContent=`${i.toFixed(2)}%`}