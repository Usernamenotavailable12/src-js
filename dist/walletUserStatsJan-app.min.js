function calculateTimeInterval(){const t=new Date,e=new Date(t);e.setHours(0,0,0,0);const a=new Date(e);return a.setHours(24,0,0,0),{from:e.toISOString(),to:a.toISOString()}}async function showBetProgressJan(){const t=calculateTimeInterval(),e=extractAuthDataFromCookie();if(!e)return void alert("Authorization data is missing.");try{const a=await fetchGraphQL("\n        query GameSessionStats($userId: ID!, $createdAtFrom: DateTime, $createdAtTo: DateTime) {\n            gameSessionStats(userId: $userId, createdAtFrom: $createdAtFrom, createdAtTo: $createdAtTo) {\n                totalBet\n            }\n        }\n    ",{userId:e.userId,createdAtFrom:t.from,createdAtTo:t.to});displayProgressBarsJan(a.data?.gameSessionStats?.[0]?.totalBet||0)}catch(t){alert("Failed to fetch progress data.")}}function displayProgressBarsJan(t){const e=document.getElementById("progressBarContainer"),a=document.getElementById("progressStage1"),o=document.getElementById("progressStage2"),n=document.getElementById("progressStage3"),r=document.getElementById("progressInfo");if(!(e&&a&&o&&n&&r))return;e.style.display="flex",r.style.display="block",r.textContent=`${t}â‚¾`;const s=Math.min(t/8e3*100,100),d=t>8e3?Math.min((t-8e3)/12e3*100,100):0,i=t>2e4?Math.min((t-2e4)/3e4*100,100):0;a.style.width=`${s}%`,a.textContent=`${s.toFixed(2)}%`,o.style.width=`${d}%`,o.textContent=`${d.toFixed(2)}%`,n.style.width=`${i}%`,n.textContent=`${i.toFixed(2)}%`}