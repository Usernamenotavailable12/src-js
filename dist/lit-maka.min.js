var y=Object.defineProperty,f=(t,e,n)=>e in t?y(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,c=(t,e,n)=>f(t,"symbol"!=typeof e?e+"":e,n);function I(){import.meta.url,import("_").catch((()=>1)),async function*(){}().next()}const{LitElement:g}=window.Lit;class h extends g{constructor(){var t;super(),c(this,"data",null),c(this,"userId",null),this.amount=20,this.data=this.transformData(),this.userId=null==(t=extractAuthDataFromCookie())?void 0:t.userId}transformData(){const t=JSON.parse(document.getElementById("progressBarData").textContent);return Object.entries(t.dateValues).map((([t,e])=>({date:t,id:e})))}buildQuery(){const t=this.data.map(((t,e)=>"\n        t".concat(e+1,': userTournamentConnection(userId: "').concat(this.userId,'", tournamentId: "').concat(t.id,'") {\n          edges {\n            node {\n              points\n            }\n          }\n        }\n      '))).join("\n");return"\n      query {\n        ".concat(t,"\n      }\n    ")}async getPointsWithTournament(){const t=this.buildQuery();try{const e=await(await fetch(API_URL+"?ts="+Date.now(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:t})})).json();return this.data.map(((t,n)=>{var a,o,s,r,i;return{date:t.date,tournamentId:t.id,points:null!=(i=null==(r=null==(s=null==(o=null==(a=e.data["t".concat(n+1)])?void 0:a.edges)?void 0:o[0])?void 0:s.node)?void 0:r.points)?i:0}}))}catch(t){console.error("err",t)}}async letAsd(){(await this.getPointsWithTournament()).forEach(((t,e)=>{var n,a,o,s;const r=new Date(t.date),i=t.points;Date.now()>r.getTime()&&(null==(a=null==(n=this.children[e])?void 0:n.classList)||a.add("active"),i>this.amount&&(null==(s=null==(o=this.children[e])?void 0:o.classList)||s.add("completed")))}))}createRenderRoot(){return this}firstUpdated(){this.letAsd()}}c(h,"properties",{amount:{type:Number}}),customElements.define("list-stepper",h);export{I as __vite_legacy_guard};