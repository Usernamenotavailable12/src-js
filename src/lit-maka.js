var y=Object.defineProperty;var f=(n,s,t)=>s in n?y(n,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[s]=t;var c=(n,s,t)=>f(n,typeof s!="symbol"?s+"":s,t);function I(){import.meta.url,import("_").catch(()=>1),async function*(){}().next()}const{LitElement:g}=window.Lit;class h extends g{constructor(){var t;super();c(this,"data",null);c(this,"userId",null);this.amount=20,this.data=this.transformData(),this.userId=(t=extractAuthDataFromCookie())==null?void 0:t.userId}transformData(){const t=JSON.parse(document.getElementById("progressBarData").textContent);return Object.entries(t.dateValues).map(([e,a])=>({date:e,id:a}))}buildQuery(){const t=this.data.map((e,a)=>"\n        t".concat(a+1,': userTournamentConnection(userId: "').concat(this.userId,'", tournamentId: "').concat(e.id,'") {\n          edges {\n            node {\n              points\n            }\n          }\n        }\n      ')).join("\n");return"\n      query {\n        ".concat(t,"\n      }\n    ")}async getPointsWithTournament(){const t=this.buildQuery();try{const a=await(await fetch(API_URL+"?ts="+Date.now(),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:t})})).json();return this.data.map((d,u)=>{var r,o,i,l,m;return{date:d.date,tournamentId:d.id,points:(m=(l=(i=(o=(r=a.data["t".concat(u+1)])==null?void 0:r.edges)==null?void 0:o[0])==null?void 0:i.node)==null?void 0:l.points)!=null?m:0}})}catch(e){console.error("err",e)}}async letAsd(){(await this.getPointsWithTournament()).forEach((e,a)=>{var u,r,o,i;const p=new Date(e.date),d=e.points;Date.now()>p.getTime()&&((r=(u=this.children[a])==null?void 0:u.classList)==null||r.add("active"),d>this.amount&&((i=(o=this.children[a])==null?void 0:o.classList)==null||i.add("completed")))})}createRenderRoot(){return this}firstUpdated(){this.letAsd()}}c(h,"properties",{amount:{type:Number}});customElements.define("list-stepper",h);export{I as __vite_legacy_guard};
//# sourceMappingURL=stepper.js.map
